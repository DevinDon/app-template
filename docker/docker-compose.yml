version: '3.7'

services:

  # Nginx, overnet & frontend & backend, ports / expose 80 & 443 & 15432 (postgresql) & 16379 (redis)
  app-nginx:
    image: registry.cn-shanghai.aliyuncs.com/iinfinity/nginx
    depends_on:
      - postgres
      - redis
      - server
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
    networks:
      - overnet
    ports: # comment on proxy mode
      - "80:80"
      - "443:443"
      - "15432:5432"
      - "16379:6379"
    volumes:
      - "./etc/nginx:/etc/nginx:ro"

  # PostgreSQL, backend ,expose 5432
  app-postgres:
    image: postgres
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 30s
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
      POSTGRES_DB: app
    networks:
      - overnet
    volumes:
      - data-postgres:/var/lib/postgresql/data

  # Redis, backend, expose 6379
  app-redis:
    image: redis
    deploy:
      mode: replicated
      replicas: 1
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 30s
    networks:
      - overnet
    volumes:
      - data-redis:/data

  # KBS, frontend & backend, expose 8080
  app-server:
    image: docker.io/username/app-server
    depends_on:
      - postgres
      - redis
    deploy:
      mode: replicated
      replicas: 2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 30s
    networks:
      - overnet
    volumes:
      - data-server:/app/data

networks:
  overnet:
    external: true
    name: overnet

volumes:
  data-postgres:
  data-redis:
  data-server:
